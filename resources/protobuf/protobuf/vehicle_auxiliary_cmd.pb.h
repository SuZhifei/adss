// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vehicle_auxiliary_cmd.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_vehicle_5fauxiliary_5fcmd_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_vehicle_5fauxiliary_5fcmd_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_vehicle_5fauxiliary_5fcmd_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_vehicle_5fauxiliary_5fcmd_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_vehicle_5fauxiliary_5fcmd_2eproto;
namespace IBUS {
class VehicleAuxiliaryCmd;
class VehicleAuxiliaryCmdDefaultTypeInternal;
extern VehicleAuxiliaryCmdDefaultTypeInternal _VehicleAuxiliaryCmd_default_instance_;
}  // namespace IBUS
PROTOBUF_NAMESPACE_OPEN
template<> ::IBUS::VehicleAuxiliaryCmd* Arena::CreateMaybeMessage<::IBUS::VehicleAuxiliaryCmd>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace IBUS {

// ===================================================================

class VehicleAuxiliaryCmd :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IBUS.VehicleAuxiliaryCmd) */ {
 public:
  VehicleAuxiliaryCmd();
  virtual ~VehicleAuxiliaryCmd();

  VehicleAuxiliaryCmd(const VehicleAuxiliaryCmd& from);
  VehicleAuxiliaryCmd(VehicleAuxiliaryCmd&& from) noexcept
    : VehicleAuxiliaryCmd() {
    *this = ::std::move(from);
  }

  inline VehicleAuxiliaryCmd& operator=(const VehicleAuxiliaryCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline VehicleAuxiliaryCmd& operator=(VehicleAuxiliaryCmd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VehicleAuxiliaryCmd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleAuxiliaryCmd* internal_default_instance() {
    return reinterpret_cast<const VehicleAuxiliaryCmd*>(
               &_VehicleAuxiliaryCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VehicleAuxiliaryCmd& a, VehicleAuxiliaryCmd& b) {
    a.Swap(&b);
  }
  inline void Swap(VehicleAuxiliaryCmd* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VehicleAuxiliaryCmd* New() const final {
    return CreateMaybeMessage<VehicleAuxiliaryCmd>(nullptr);
  }

  VehicleAuxiliaryCmd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VehicleAuxiliaryCmd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VehicleAuxiliaryCmd& from);
  void MergeFrom(const VehicleAuxiliaryCmd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleAuxiliaryCmd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IBUS.VehicleAuxiliaryCmd";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_vehicle_5fauxiliary_5fcmd_2eproto);
    return ::descriptor_table_vehicle_5fauxiliary_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kHornFieldNumber = 2,
    kAirConditionerFieldNumber = 3,
    kLeftLightFieldNumber = 4,
    kRightLightFieldNumber = 5,
    kLowLightStatusFieldNumber = 6,
    kHighLightStatusFieldNumber = 7,
    kEmergencyDoubleFlashLightFieldNumber = 8,
    kFrontFogLightStatusFieldNumber = 9,
    kRearFogLightStatusFieldNumber = 10,
    kTipperHopperFieldNumber = 11,
    kTipperHopperSpeedFieldNumber = 12,
    kTargetCurvatureFlagFieldNumber = 13,
    kTargetCurvatureFieldNumber = 14,
    kVehicleWeightFieldNumber = 15,
    kAutoHoldFieldNumber = 16,
    kDiffLockFieldNumber = 17,
    kCleaningSystemWorkStatusFieldNumber = 18,
    kCleaningSystemWorkModeFieldNumber = 19,
    kWiperWaterPump1FieldNumber = 20,
    kWiperWaterPump2FieldNumber = 21,
    kWiperValve1FieldNumber = 22,
    kWiperValve2FieldNumber = 23,
    kWiperValve3FieldNumber = 24,
    kWiperHeating1FieldNumber = 25,
    kWiperHeating2FieldNumber = 26,
    kWiperHeating3FieldNumber = 27,
    kWiperWaterPumpTimeFieldNumber = 28,
    kWiperValveTimeFieldNumber = 29,
    kWiperHeatingTimeFieldNumber = 30,
    kSelfcheckFieldNumber = 31,
  };
  // .IBUS.Header header = 1;
  bool has_header() const;
  void clear_header();
  const ::IBUS::Header& header() const;
  ::IBUS::Header* release_header();
  ::IBUS::Header* mutable_header();
  void set_allocated_header(::IBUS::Header* header);

  // uint32 horn = 2;
  void clear_horn();
  ::PROTOBUF_NAMESPACE_ID::uint32 horn() const;
  void set_horn(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 airConditioner = 3;
  void clear_airconditioner();
  ::PROTOBUF_NAMESPACE_ID::uint32 airconditioner() const;
  void set_airconditioner(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 leftLight = 4;
  void clear_leftlight();
  ::PROTOBUF_NAMESPACE_ID::uint32 leftlight() const;
  void set_leftlight(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 rightLight = 5;
  void clear_rightlight();
  ::PROTOBUF_NAMESPACE_ID::uint32 rightlight() const;
  void set_rightlight(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 lowLightStatus = 6;
  void clear_lowlightstatus();
  ::PROTOBUF_NAMESPACE_ID::uint32 lowlightstatus() const;
  void set_lowlightstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 highLightStatus = 7;
  void clear_highlightstatus();
  ::PROTOBUF_NAMESPACE_ID::uint32 highlightstatus() const;
  void set_highlightstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 emergencyDoubleFlashLight = 8;
  void clear_emergencydoubleflashlight();
  ::PROTOBUF_NAMESPACE_ID::uint32 emergencydoubleflashlight() const;
  void set_emergencydoubleflashlight(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 frontFogLightStatus = 9;
  void clear_frontfoglightstatus();
  ::PROTOBUF_NAMESPACE_ID::uint32 frontfoglightstatus() const;
  void set_frontfoglightstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 rearFogLightStatus = 10;
  void clear_rearfoglightstatus();
  ::PROTOBUF_NAMESPACE_ID::uint32 rearfoglightstatus() const;
  void set_rearfoglightstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 tipperHopper = 11;
  void clear_tipperhopper();
  ::PROTOBUF_NAMESPACE_ID::uint32 tipperhopper() const;
  void set_tipperhopper(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // float tipperHopperSpeed = 12;
  void clear_tipperhopperspeed();
  float tipperhopperspeed() const;
  void set_tipperhopperspeed(float value);

  // uint32 targetCurvatureFlag = 13;
  void clear_targetcurvatureflag();
  ::PROTOBUF_NAMESPACE_ID::uint32 targetcurvatureflag() const;
  void set_targetcurvatureflag(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // double targetCurvature = 14;
  void clear_targetcurvature();
  double targetcurvature() const;
  void set_targetcurvature(double value);

  // float vehicleWeight = 15;
  void clear_vehicleweight();
  float vehicleweight() const;
  void set_vehicleweight(float value);

  // uint32 autoHold = 16;
  void clear_autohold();
  ::PROTOBUF_NAMESPACE_ID::uint32 autohold() const;
  void set_autohold(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 diffLock = 17;
  void clear_difflock();
  ::PROTOBUF_NAMESPACE_ID::uint32 difflock() const;
  void set_difflock(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 cleaningSystemWorkStatus = 18;
  void clear_cleaningsystemworkstatus();
  ::PROTOBUF_NAMESPACE_ID::uint32 cleaningsystemworkstatus() const;
  void set_cleaningsystemworkstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 cleaningSystemWorkMode = 19;
  void clear_cleaningsystemworkmode();
  ::PROTOBUF_NAMESPACE_ID::uint32 cleaningsystemworkmode() const;
  void set_cleaningsystemworkmode(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperWaterPump1 = 20;
  void clear_wiperwaterpump1();
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperwaterpump1() const;
  void set_wiperwaterpump1(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperWaterPump2 = 21;
  void clear_wiperwaterpump2();
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperwaterpump2() const;
  void set_wiperwaterpump2(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperValve1 = 22;
  void clear_wipervalve1();
  ::PROTOBUF_NAMESPACE_ID::uint32 wipervalve1() const;
  void set_wipervalve1(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperValve2 = 23;
  void clear_wipervalve2();
  ::PROTOBUF_NAMESPACE_ID::uint32 wipervalve2() const;
  void set_wipervalve2(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperValve3 = 24;
  void clear_wipervalve3();
  ::PROTOBUF_NAMESPACE_ID::uint32 wipervalve3() const;
  void set_wipervalve3(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperHeating1 = 25;
  void clear_wiperheating1();
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperheating1() const;
  void set_wiperheating1(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperHeating2 = 26;
  void clear_wiperheating2();
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperheating2() const;
  void set_wiperheating2(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperHeating3 = 27;
  void clear_wiperheating3();
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperheating3() const;
  void set_wiperheating3(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperWaterPumpTime = 28;
  void clear_wiperwaterpumptime();
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperwaterpumptime() const;
  void set_wiperwaterpumptime(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperValveTime = 29;
  void clear_wipervalvetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 wipervalvetime() const;
  void set_wipervalvetime(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 wiperHeatingTime = 30;
  void clear_wiperheatingtime();
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperheatingtime() const;
  void set_wiperheatingtime(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 selfcheck = 31;
  void clear_selfcheck();
  ::PROTOBUF_NAMESPACE_ID::uint32 selfcheck() const;
  void set_selfcheck(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:IBUS.VehicleAuxiliaryCmd)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::IBUS::Header* header_;
  ::PROTOBUF_NAMESPACE_ID::uint32 horn_;
  ::PROTOBUF_NAMESPACE_ID::uint32 airconditioner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 leftlight_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rightlight_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lowlightstatus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 highlightstatus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 emergencydoubleflashlight_;
  ::PROTOBUF_NAMESPACE_ID::uint32 frontfoglightstatus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rearfoglightstatus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tipperhopper_;
  float tipperhopperspeed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 targetcurvatureflag_;
  double targetcurvature_;
  float vehicleweight_;
  ::PROTOBUF_NAMESPACE_ID::uint32 autohold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 difflock_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cleaningsystemworkstatus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cleaningsystemworkmode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperwaterpump1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperwaterpump2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wipervalve1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wipervalve2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wipervalve3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperheating1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperheating2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperheating3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperwaterpumptime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wipervalvetime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wiperheatingtime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 selfcheck_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_vehicle_5fauxiliary_5fcmd_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VehicleAuxiliaryCmd

// .IBUS.Header header = 1;
inline bool VehicleAuxiliaryCmd::has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline const ::IBUS::Header& VehicleAuxiliaryCmd::header() const {
  const ::IBUS::Header* p = header_;
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.header)
  return p != nullptr ? *p : *reinterpret_cast<const ::IBUS::Header*>(
      &::IBUS::_Header_default_instance_);
}
inline ::IBUS::Header* VehicleAuxiliaryCmd::release_header() {
  // @@protoc_insertion_point(field_release:IBUS.VehicleAuxiliaryCmd.header)
  
  ::IBUS::Header* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::IBUS::Header* VehicleAuxiliaryCmd::mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::IBUS::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:IBUS.VehicleAuxiliaryCmd.header)
  return header_;
}
inline void VehicleAuxiliaryCmd::set_allocated_header(::IBUS::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:IBUS.VehicleAuxiliaryCmd.header)
}

// uint32 horn = 2;
inline void VehicleAuxiliaryCmd::clear_horn() {
  horn_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::horn() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.horn)
  return horn_;
}
inline void VehicleAuxiliaryCmd::set_horn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  horn_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.horn)
}

// uint32 airConditioner = 3;
inline void VehicleAuxiliaryCmd::clear_airconditioner() {
  airconditioner_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::airconditioner() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.airConditioner)
  return airconditioner_;
}
inline void VehicleAuxiliaryCmd::set_airconditioner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  airconditioner_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.airConditioner)
}

// uint32 leftLight = 4;
inline void VehicleAuxiliaryCmd::clear_leftlight() {
  leftlight_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::leftlight() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.leftLight)
  return leftlight_;
}
inline void VehicleAuxiliaryCmd::set_leftlight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  leftlight_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.leftLight)
}

// uint32 rightLight = 5;
inline void VehicleAuxiliaryCmd::clear_rightlight() {
  rightlight_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::rightlight() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.rightLight)
  return rightlight_;
}
inline void VehicleAuxiliaryCmd::set_rightlight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rightlight_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.rightLight)
}

// uint32 lowLightStatus = 6;
inline void VehicleAuxiliaryCmd::clear_lowlightstatus() {
  lowlightstatus_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::lowlightstatus() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.lowLightStatus)
  return lowlightstatus_;
}
inline void VehicleAuxiliaryCmd::set_lowlightstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  lowlightstatus_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.lowLightStatus)
}

// uint32 highLightStatus = 7;
inline void VehicleAuxiliaryCmd::clear_highlightstatus() {
  highlightstatus_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::highlightstatus() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.highLightStatus)
  return highlightstatus_;
}
inline void VehicleAuxiliaryCmd::set_highlightstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  highlightstatus_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.highLightStatus)
}

// uint32 emergencyDoubleFlashLight = 8;
inline void VehicleAuxiliaryCmd::clear_emergencydoubleflashlight() {
  emergencydoubleflashlight_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::emergencydoubleflashlight() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.emergencyDoubleFlashLight)
  return emergencydoubleflashlight_;
}
inline void VehicleAuxiliaryCmd::set_emergencydoubleflashlight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  emergencydoubleflashlight_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.emergencyDoubleFlashLight)
}

// uint32 frontFogLightStatus = 9;
inline void VehicleAuxiliaryCmd::clear_frontfoglightstatus() {
  frontfoglightstatus_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::frontfoglightstatus() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.frontFogLightStatus)
  return frontfoglightstatus_;
}
inline void VehicleAuxiliaryCmd::set_frontfoglightstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  frontfoglightstatus_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.frontFogLightStatus)
}

// uint32 rearFogLightStatus = 10;
inline void VehicleAuxiliaryCmd::clear_rearfoglightstatus() {
  rearfoglightstatus_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::rearfoglightstatus() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.rearFogLightStatus)
  return rearfoglightstatus_;
}
inline void VehicleAuxiliaryCmd::set_rearfoglightstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rearfoglightstatus_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.rearFogLightStatus)
}

// uint32 tipperHopper = 11;
inline void VehicleAuxiliaryCmd::clear_tipperhopper() {
  tipperhopper_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::tipperhopper() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.tipperHopper)
  return tipperhopper_;
}
inline void VehicleAuxiliaryCmd::set_tipperhopper(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tipperhopper_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.tipperHopper)
}

// float tipperHopperSpeed = 12;
inline void VehicleAuxiliaryCmd::clear_tipperhopperspeed() {
  tipperhopperspeed_ = 0;
}
inline float VehicleAuxiliaryCmd::tipperhopperspeed() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.tipperHopperSpeed)
  return tipperhopperspeed_;
}
inline void VehicleAuxiliaryCmd::set_tipperhopperspeed(float value) {
  
  tipperhopperspeed_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.tipperHopperSpeed)
}

// uint32 targetCurvatureFlag = 13;
inline void VehicleAuxiliaryCmd::clear_targetcurvatureflag() {
  targetcurvatureflag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::targetcurvatureflag() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.targetCurvatureFlag)
  return targetcurvatureflag_;
}
inline void VehicleAuxiliaryCmd::set_targetcurvatureflag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  targetcurvatureflag_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.targetCurvatureFlag)
}

// double targetCurvature = 14;
inline void VehicleAuxiliaryCmd::clear_targetcurvature() {
  targetcurvature_ = 0;
}
inline double VehicleAuxiliaryCmd::targetcurvature() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.targetCurvature)
  return targetcurvature_;
}
inline void VehicleAuxiliaryCmd::set_targetcurvature(double value) {
  
  targetcurvature_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.targetCurvature)
}

// float vehicleWeight = 15;
inline void VehicleAuxiliaryCmd::clear_vehicleweight() {
  vehicleweight_ = 0;
}
inline float VehicleAuxiliaryCmd::vehicleweight() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.vehicleWeight)
  return vehicleweight_;
}
inline void VehicleAuxiliaryCmd::set_vehicleweight(float value) {
  
  vehicleweight_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.vehicleWeight)
}

// uint32 autoHold = 16;
inline void VehicleAuxiliaryCmd::clear_autohold() {
  autohold_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::autohold() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.autoHold)
  return autohold_;
}
inline void VehicleAuxiliaryCmd::set_autohold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  autohold_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.autoHold)
}

// uint32 diffLock = 17;
inline void VehicleAuxiliaryCmd::clear_difflock() {
  difflock_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::difflock() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.diffLock)
  return difflock_;
}
inline void VehicleAuxiliaryCmd::set_difflock(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  difflock_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.diffLock)
}

// uint32 cleaningSystemWorkStatus = 18;
inline void VehicleAuxiliaryCmd::clear_cleaningsystemworkstatus() {
  cleaningsystemworkstatus_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::cleaningsystemworkstatus() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.cleaningSystemWorkStatus)
  return cleaningsystemworkstatus_;
}
inline void VehicleAuxiliaryCmd::set_cleaningsystemworkstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cleaningsystemworkstatus_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.cleaningSystemWorkStatus)
}

// uint32 cleaningSystemWorkMode = 19;
inline void VehicleAuxiliaryCmd::clear_cleaningsystemworkmode() {
  cleaningsystemworkmode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::cleaningsystemworkmode() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.cleaningSystemWorkMode)
  return cleaningsystemworkmode_;
}
inline void VehicleAuxiliaryCmd::set_cleaningsystemworkmode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cleaningsystemworkmode_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.cleaningSystemWorkMode)
}

// uint32 wiperWaterPump1 = 20;
inline void VehicleAuxiliaryCmd::clear_wiperwaterpump1() {
  wiperwaterpump1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wiperwaterpump1() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperWaterPump1)
  return wiperwaterpump1_;
}
inline void VehicleAuxiliaryCmd::set_wiperwaterpump1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wiperwaterpump1_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperWaterPump1)
}

// uint32 wiperWaterPump2 = 21;
inline void VehicleAuxiliaryCmd::clear_wiperwaterpump2() {
  wiperwaterpump2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wiperwaterpump2() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperWaterPump2)
  return wiperwaterpump2_;
}
inline void VehicleAuxiliaryCmd::set_wiperwaterpump2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wiperwaterpump2_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperWaterPump2)
}

// uint32 wiperValve1 = 22;
inline void VehicleAuxiliaryCmd::clear_wipervalve1() {
  wipervalve1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wipervalve1() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperValve1)
  return wipervalve1_;
}
inline void VehicleAuxiliaryCmd::set_wipervalve1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wipervalve1_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperValve1)
}

// uint32 wiperValve2 = 23;
inline void VehicleAuxiliaryCmd::clear_wipervalve2() {
  wipervalve2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wipervalve2() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperValve2)
  return wipervalve2_;
}
inline void VehicleAuxiliaryCmd::set_wipervalve2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wipervalve2_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperValve2)
}

// uint32 wiperValve3 = 24;
inline void VehicleAuxiliaryCmd::clear_wipervalve3() {
  wipervalve3_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wipervalve3() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperValve3)
  return wipervalve3_;
}
inline void VehicleAuxiliaryCmd::set_wipervalve3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wipervalve3_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperValve3)
}

// uint32 wiperHeating1 = 25;
inline void VehicleAuxiliaryCmd::clear_wiperheating1() {
  wiperheating1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wiperheating1() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperHeating1)
  return wiperheating1_;
}
inline void VehicleAuxiliaryCmd::set_wiperheating1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wiperheating1_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperHeating1)
}

// uint32 wiperHeating2 = 26;
inline void VehicleAuxiliaryCmd::clear_wiperheating2() {
  wiperheating2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wiperheating2() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperHeating2)
  return wiperheating2_;
}
inline void VehicleAuxiliaryCmd::set_wiperheating2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wiperheating2_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperHeating2)
}

// uint32 wiperHeating3 = 27;
inline void VehicleAuxiliaryCmd::clear_wiperheating3() {
  wiperheating3_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wiperheating3() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperHeating3)
  return wiperheating3_;
}
inline void VehicleAuxiliaryCmd::set_wiperheating3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wiperheating3_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperHeating3)
}

// uint32 wiperWaterPumpTime = 28;
inline void VehicleAuxiliaryCmd::clear_wiperwaterpumptime() {
  wiperwaterpumptime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wiperwaterpumptime() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperWaterPumpTime)
  return wiperwaterpumptime_;
}
inline void VehicleAuxiliaryCmd::set_wiperwaterpumptime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wiperwaterpumptime_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperWaterPumpTime)
}

// uint32 wiperValveTime = 29;
inline void VehicleAuxiliaryCmd::clear_wipervalvetime() {
  wipervalvetime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wipervalvetime() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperValveTime)
  return wipervalvetime_;
}
inline void VehicleAuxiliaryCmd::set_wipervalvetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wipervalvetime_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperValveTime)
}

// uint32 wiperHeatingTime = 30;
inline void VehicleAuxiliaryCmd::clear_wiperheatingtime() {
  wiperheatingtime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::wiperheatingtime() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.wiperHeatingTime)
  return wiperheatingtime_;
}
inline void VehicleAuxiliaryCmd::set_wiperheatingtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wiperheatingtime_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.wiperHeatingTime)
}

// uint32 selfcheck = 31;
inline void VehicleAuxiliaryCmd::clear_selfcheck() {
  selfcheck_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VehicleAuxiliaryCmd::selfcheck() const {
  // @@protoc_insertion_point(field_get:IBUS.VehicleAuxiliaryCmd.selfcheck)
  return selfcheck_;
}
inline void VehicleAuxiliaryCmd::set_selfcheck(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  selfcheck_ = value;
  // @@protoc_insertion_point(field_set:IBUS.VehicleAuxiliaryCmd.selfcheck)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace IBUS

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_vehicle_5fauxiliary_5fcmd_2eproto
