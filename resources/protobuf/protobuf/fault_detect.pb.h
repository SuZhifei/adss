// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fault_detect.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_fault_5fdetect_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_fault_5fdetect_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_fault_5fdetect_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_fault_5fdetect_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_fault_5fdetect_2eproto;
namespace IBUS {
class FaultDetectInfo;
class FaultDetectInfoDefaultTypeInternal;
extern FaultDetectInfoDefaultTypeInternal _FaultDetectInfo_default_instance_;
class FaultDetectMsg;
class FaultDetectMsgDefaultTypeInternal;
extern FaultDetectMsgDefaultTypeInternal _FaultDetectMsg_default_instance_;
}  // namespace IBUS
PROTOBUF_NAMESPACE_OPEN
template<> ::IBUS::FaultDetectInfo* Arena::CreateMaybeMessage<::IBUS::FaultDetectInfo>(Arena*);
template<> ::IBUS::FaultDetectMsg* Arena::CreateMaybeMessage<::IBUS::FaultDetectMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace IBUS {

// ===================================================================

class FaultDetectInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IBUS.FaultDetectInfo) */ {
 public:
  FaultDetectInfo();
  virtual ~FaultDetectInfo();

  FaultDetectInfo(const FaultDetectInfo& from);
  FaultDetectInfo(FaultDetectInfo&& from) noexcept
    : FaultDetectInfo() {
    *this = ::std::move(from);
  }

  inline FaultDetectInfo& operator=(const FaultDetectInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline FaultDetectInfo& operator=(FaultDetectInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FaultDetectInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaultDetectInfo* internal_default_instance() {
    return reinterpret_cast<const FaultDetectInfo*>(
               &_FaultDetectInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FaultDetectInfo& a, FaultDetectInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(FaultDetectInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FaultDetectInfo* New() const final {
    return CreateMaybeMessage<FaultDetectInfo>(nullptr);
  }

  FaultDetectInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FaultDetectInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FaultDetectInfo& from);
  void MergeFrom(const FaultDetectInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FaultDetectInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IBUS.FaultDetectInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_fault_5fdetect_2eproto);
    return ::descriptor_table_fault_5fdetect_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubSystemFieldNumber = 1,
    kFaultLevelFieldNumber = 2,
    kDtcFieldNumber = 3,
    kFaultIdFieldNumber = 4,
  };
  // uint32 sub_system = 1;
  void clear_sub_system();
  ::PROTOBUF_NAMESPACE_ID::uint32 sub_system() const;
  void set_sub_system(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 fault_level = 2;
  void clear_fault_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 fault_level() const;
  void set_fault_level(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 dtc = 3;
  void clear_dtc();
  ::PROTOBUF_NAMESPACE_ID::uint32 dtc() const;
  void set_dtc(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 fault_id = 4;
  void clear_fault_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 fault_id() const;
  void set_fault_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:IBUS.FaultDetectInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sub_system_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fault_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dtc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fault_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fault_5fdetect_2eproto;
};
// -------------------------------------------------------------------

class FaultDetectMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IBUS.FaultDetectMsg) */ {
 public:
  FaultDetectMsg();
  virtual ~FaultDetectMsg();

  FaultDetectMsg(const FaultDetectMsg& from);
  FaultDetectMsg(FaultDetectMsg&& from) noexcept
    : FaultDetectMsg() {
    *this = ::std::move(from);
  }

  inline FaultDetectMsg& operator=(const FaultDetectMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline FaultDetectMsg& operator=(FaultDetectMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FaultDetectMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaultDetectMsg* internal_default_instance() {
    return reinterpret_cast<const FaultDetectMsg*>(
               &_FaultDetectMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FaultDetectMsg& a, FaultDetectMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(FaultDetectMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FaultDetectMsg* New() const final {
    return CreateMaybeMessage<FaultDetectMsg>(nullptr);
  }

  FaultDetectMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FaultDetectMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FaultDetectMsg& from);
  void MergeFrom(const FaultDetectMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FaultDetectMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IBUS.FaultDetectMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_fault_5fdetect_2eproto);
    return ::descriptor_table_fault_5fdetect_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetectInfoFieldNumber = 2,
    kMoudleIdFieldNumber = 1,
  };
  // repeated .IBUS.FaultDetectInfo detect_info = 2;
  int detect_info_size() const;
  void clear_detect_info();
  ::IBUS::FaultDetectInfo* mutable_detect_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IBUS::FaultDetectInfo >*
      mutable_detect_info();
  const ::IBUS::FaultDetectInfo& detect_info(int index) const;
  ::IBUS::FaultDetectInfo* add_detect_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IBUS::FaultDetectInfo >&
      detect_info() const;

  // uint32 moudle_id = 1;
  void clear_moudle_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 moudle_id() const;
  void set_moudle_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:IBUS.FaultDetectMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IBUS::FaultDetectInfo > detect_info_;
  ::PROTOBUF_NAMESPACE_ID::uint32 moudle_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_fault_5fdetect_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FaultDetectInfo

// uint32 sub_system = 1;
inline void FaultDetectInfo::clear_sub_system() {
  sub_system_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FaultDetectInfo::sub_system() const {
  // @@protoc_insertion_point(field_get:IBUS.FaultDetectInfo.sub_system)
  return sub_system_;
}
inline void FaultDetectInfo::set_sub_system(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sub_system_ = value;
  // @@protoc_insertion_point(field_set:IBUS.FaultDetectInfo.sub_system)
}

// uint32 fault_level = 2;
inline void FaultDetectInfo::clear_fault_level() {
  fault_level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FaultDetectInfo::fault_level() const {
  // @@protoc_insertion_point(field_get:IBUS.FaultDetectInfo.fault_level)
  return fault_level_;
}
inline void FaultDetectInfo::set_fault_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fault_level_ = value;
  // @@protoc_insertion_point(field_set:IBUS.FaultDetectInfo.fault_level)
}

// uint32 dtc = 3;
inline void FaultDetectInfo::clear_dtc() {
  dtc_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FaultDetectInfo::dtc() const {
  // @@protoc_insertion_point(field_get:IBUS.FaultDetectInfo.dtc)
  return dtc_;
}
inline void FaultDetectInfo::set_dtc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dtc_ = value;
  // @@protoc_insertion_point(field_set:IBUS.FaultDetectInfo.dtc)
}

// uint32 fault_id = 4;
inline void FaultDetectInfo::clear_fault_id() {
  fault_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FaultDetectInfo::fault_id() const {
  // @@protoc_insertion_point(field_get:IBUS.FaultDetectInfo.fault_id)
  return fault_id_;
}
inline void FaultDetectInfo::set_fault_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fault_id_ = value;
  // @@protoc_insertion_point(field_set:IBUS.FaultDetectInfo.fault_id)
}

// -------------------------------------------------------------------

// FaultDetectMsg

// uint32 moudle_id = 1;
inline void FaultDetectMsg::clear_moudle_id() {
  moudle_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FaultDetectMsg::moudle_id() const {
  // @@protoc_insertion_point(field_get:IBUS.FaultDetectMsg.moudle_id)
  return moudle_id_;
}
inline void FaultDetectMsg::set_moudle_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  moudle_id_ = value;
  // @@protoc_insertion_point(field_set:IBUS.FaultDetectMsg.moudle_id)
}

// repeated .IBUS.FaultDetectInfo detect_info = 2;
inline int FaultDetectMsg::detect_info_size() const {
  return detect_info_.size();
}
inline void FaultDetectMsg::clear_detect_info() {
  detect_info_.Clear();
}
inline ::IBUS::FaultDetectInfo* FaultDetectMsg::mutable_detect_info(int index) {
  // @@protoc_insertion_point(field_mutable:IBUS.FaultDetectMsg.detect_info)
  return detect_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IBUS::FaultDetectInfo >*
FaultDetectMsg::mutable_detect_info() {
  // @@protoc_insertion_point(field_mutable_list:IBUS.FaultDetectMsg.detect_info)
  return &detect_info_;
}
inline const ::IBUS::FaultDetectInfo& FaultDetectMsg::detect_info(int index) const {
  // @@protoc_insertion_point(field_get:IBUS.FaultDetectMsg.detect_info)
  return detect_info_.Get(index);
}
inline ::IBUS::FaultDetectInfo* FaultDetectMsg::add_detect_info() {
  // @@protoc_insertion_point(field_add:IBUS.FaultDetectMsg.detect_info)
  return detect_info_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IBUS::FaultDetectInfo >&
FaultDetectMsg::detect_info() const {
  // @@protoc_insertion_point(field_list:IBUS.FaultDetectMsg.detect_info)
  return detect_info_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IBUS

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_fault_5fdetect_2eproto
